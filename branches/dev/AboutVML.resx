<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABzAGoDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9yKCcDmmlj5hzwAPzpEJePnBrxz0BzNhSfbNQTXexQeQc/nVX
        X/ENl4a0S8vb65hsrOyge4uJpXCxwRopZnYngKACSewGa+B/2pv+C0Gn6b4j1Hwz8MLfSdeWO2KP4gmn
        c28ExXdvhiVCZlRWXLcLu9gRQk38JMpJH1h8Rv22/hZ8KRqi63488NQXWkoXuLOK8W4uxggbFhj3Oz5P
        3VBPGcAc1jfCD/got8G/jQRHpfjXS7G9YFltNXzpdw47lUnClvwzjkdq/FyPUGkhhuFhMtzFHLMZMqJb
        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
</value>
  </data>
  <data name="labelEPICSContributors.Text" xml:space="preserve">
    <value>Brought to you by the EPICS SLAC team, Virtual Project:
Nathan Miller, Michael Flaigan, Andrea Moore, Sanjay Patel, Shravan Kasireddy, Le'Ann Scott, Rebecca Benjain, Janice Woodruff, Colin Wong, Erin Kightlinger, Angela Hoffa, Matthew Hunold, Jeremy Clifford, Dyanna Hamstra, Matthew Harris, Kelsie Johnson, Robert Pope, Robert Schwieterman, John Laswell, and Michael Goldman

Under the direction of:

Dr. Robert E. Novak - PhD, CCC-A
Clinical Audiologist
MD Steer Audiology Clinic
Department of Speech, Language, and Hearing Sciences
Purdue University</value>
  </data>
</root>